version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: architecture-diagrams-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: architecture_diagrams
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: architecture-diagrams-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: architecture-diagrams-backend
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/architecture_diagrams
      - REDIS_URL=redis://redis:6379/0
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - CORS_ORIGINS=http://localhost:3000
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LLM_PROVIDER=${LLM_PROVIDER:-anthropic}
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - diagram_storage:/app/diagrams
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload

  teams-bot:
    build:
      context: ./backend
      dockerfile: Dockerfile.bot
    container_name: architecture-diagrams-bot
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/architecture_diagrams
      - REDIS_URL=redis://redis:6379/0
      - TEAMS_APP_ID=${TEAMS_APP_ID}
      - TEAMS_APP_PASSWORD=${TEAMS_APP_PASSWORD}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LLM_PROVIDER=${LLM_PROVIDER:-anthropic}
    ports:
      - "3978:3978"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: python -m backend.bot.teams_app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: architecture-diagrams-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_data:
  redis_data:
  diagram_storage:
